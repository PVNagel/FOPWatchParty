@page "/moviepage/{imdbID}"

@using ClassLibrary.Models;
@using System.Text.Json;
@using System.Text;
@using System.Net;
@inject IJSRuntime JSRuntime
@inject HttpClient httpClient
@inject NavigationManager Navigation
@inject HttpClient httpClient

<link rel="stylesheet" href="/css/moviePage.css" />

<div class="movie-details-container">
    @if (movie == null)
    {
        <div class="loading-message">
            <em>Loading...</em>
        </div>
    }
    else
    {
        <div class="movie-details">
            <h1>@movie.Title</h1>
            <div class="details-container">
                <div class="poster-section">
                    @if (movie.Poster == "N/A")
                    {
                        <img src="https://i.imgur.com/l1wt1eN.jpg" alt="Default Movie Poster"/>
                    }
                    else
                    {
                        <img src="@movie.Poster" alt="Movie Poster"/>
                    }
                </div>
                <table class="table">
                    <tbody>
                        <tr>
                            <th>Released:</th>
                            <td>@movie.Released</td>
                        </tr>
                        <tr>
                            <th>Genre:</th>
                            <td>@movie.Genre</td>
                        </tr>
                        <tr>
                            <th>Director:</th>
                            <td>@movie.Director</td>
                        </tr>
                        <tr>
                            <th>Actors:</th>
                            <td>@movie.Actors</td>
                        </tr>
                        <tr>
                            <th>IMDb:</th>
                            <td>@movie.imdbRating/10 <br />(@movie.imdbVotes)</td>
                        </tr>
                        <tr>
                            <th>Runtime:</th>
                            <td>@movie.Runtime</td>
                        </tr>
                        <tr>
                            <th>Awards:</th>
                            <td>@movie.Awards</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="button-container">
                <button class="watchlist-button" @onclick="@(async () => await AddMovieToWatchlist(movie))">Add to Watchlist</button>
            </div>
        </div>
        
    }
</div>

@code {
    private Movie movie;

    [Parameter]
    public string imdbID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            movie = await httpClient.GetFromJsonAsync<Movie>($"https://localhost:7055/api/movies/imdb-id/{imdbID}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching movie data: {ex.Message}");
        }
    }

    private async Task AddMovieToWatchlist(Movie movie)
    {
        try
        {
            if (movie != null)
            {
                var response = await httpClient.PostAsync($"https://localhost:7055/api/watchlist/add?imdbID={ movie.imdbID}", null);

                if (response.IsSuccessStatusCode)
                {
                    await JSRuntime.InvokeVoidAsync("showDialog", "Movie has been added to the watchlist.");
                }
                else if (response.StatusCode == HttpStatusCode.Conflict)
                {
                    await JSRuntime.InvokeVoidAsync("showDialog", "Movie is already in the watchlist.");
                }
                else
                {
                    Console.WriteLine($"Error adding movie to the watchlist. Status code: {response.StatusCode}");
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding movie to the watchlist: {ex.Message}");
        }
    }
}

<script>
    function showConfirmationDialog(message) {
        alert(message);
    }
</script>